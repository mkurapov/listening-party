{"ast":null,"code":"import _slicedToArray from\"/Users/max/dev/listening-party/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{SocketEvent}from'../common';import axios from'axios';import{useHistory}from'react-router';import{useUser}from'../contexts/UserContext';import socket from'../socket';import{SPOTIFY_API}from'../const';var PartyPage=function PartyPage(_ref){var _party$adminUser2,_party$users,_party$playbackState;var match=_ref.match;var _useUser=useUser(),user=_useUser.user,isLoading=_useUser.isLoading;var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),party=_useState2[0],setParty=_useState2[1];var partyId=match.params.id;var history=useHistory();useEffect(function(){console.log('loaded party first time');socket.on(SocketEvent.USER_LEFT_PARTY_RES,function(party){console.log('USER LEFT PARTY',party);setParty(party);});socket.on(SocketEvent.PARTY_PLAYBACK_CHANGED_RES,function(newPartyState){var _newPartyState$adminU;console.log('NEW PLAYBACK STATE',newPartyState.playbackState);setParty(newPartyState);if(newPartyState.playbackState&&((_newPartyState$adminU=newPartyState.adminUser)===null||_newPartyState$adminU===void 0?void 0:_newPartyState$adminU.id)!==(user===null||user===void 0?void 0:user.id)){setCurrentlyPlaying(newPartyState.playbackState);}});socket.on(SocketEvent.PARTY_NOT_FOUND_RES,function(party){console.log('This party was not found... redirecting back');setTimeout(function(){history.push('/');},2000);});socket.on(SocketEvent.PARTY_JOINED_RES,function(party){var _party$adminUser;console.log('USER JOINED PARTY',party);setParty(party);console.log('current party, ',party);// start polling if admin\nif(((_party$adminUser=party.adminUser)===null||_party$adminUser===void 0?void 0:_party$adminUser.id)===(user===null||user===void 0?void 0:user.id)){getCurrentlyPlaying(party.id);}});// NEED TO CHECK IF PARTY EXISTS HERE \nreturn function(){socket.emit(SocketEvent.USER_LEFT_PARTY_REQ);};},[]);var getCurrentlyPlaying=function getCurrentlyPlaying(partyId){axios.get(SPOTIFY_API.CURRENTLY_PLAYING).then(function(res){console.log(res.data);socket.emit(SocketEvent.PARTY_PLAYBACK_CHANGED_REQ,{playbackState:res.data,partyId:partyId});});};var setCurrentlyPlaying=function setCurrentlyPlaying(playbackState){console.log('playing new state ',playbackState);var args={context_uri:playbackState.item.uri};axios.put(SPOTIFY_API.PLAY,args).then(function(){return console.log('set new playbackState');});};useEffect(function(){if(!user||isLoading){console.log('You are not authed');return;}console.log('Logged in as ',user.id);socket.emit(SocketEvent.PARTY_JOINED_REQ,{user:user,socketId:socket.id,partyId:partyId});},[user]);// const onPartyJoinedUnauthed = (numberOfUsers: number) => {\n//     console.log('PARTY JOINED BACK')\n//     setNumberOfUsers(numberOfUsers);\n// }\nreturn/*#__PURE__*/React.createElement(\"div\",null,user&&user.id?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"A duper dope party\"),/*#__PURE__*/React.createElement(\"div\",null,\"Hi, \",user.id,\"!\"),/*#__PURE__*/React.createElement(\"div\",null,\"The party admin is: $\",party===null||party===void 0?void 0:(_party$adminUser2=party.adminUser)===null||_party$adminUser2===void 0?void 0:_party$adminUser2.id),/*#__PURE__*/React.createElement(\"div\",null,\"Users in here: \",party===null||party===void 0?void 0:(_party$users=party.users)===null||_party$users===void 0?void 0:_party$users.map(function(user){return user.display_name;}).join(', ')),(party===null||party===void 0?void 0:party.playbackState)?/*#__PURE__*/React.createElement(\"div\",null,\"Currently playing: \",party===null||party===void 0?void 0:(_party$playbackState=party.playbackState)===null||_party$playbackState===void 0?void 0:_party$playbackState.item.name):/*#__PURE__*/React.createElement(\"div\",null,\"No tracks playing\")):/*#__PURE__*/React.createElement(\"div\",null,\"This is a party, but you aint authed.\"));};export default PartyPage;","map":{"version":3,"sources":["/Users/max/dev/listening-party/client/src/pages/Party.tsx"],"names":["React","useEffect","useState","SocketEvent","axios","useHistory","useUser","socket","SPOTIFY_API","PartyPage","match","user","isLoading","undefined","party","setParty","partyId","params","id","history","console","log","on","USER_LEFT_PARTY_RES","PARTY_PLAYBACK_CHANGED_RES","newPartyState","playbackState","adminUser","setCurrentlyPlaying","PARTY_NOT_FOUND_RES","setTimeout","push","PARTY_JOINED_RES","getCurrentlyPlaying","emit","USER_LEFT_PARTY_REQ","get","CURRENTLY_PLAYING","then","res","data","PARTY_PLAYBACK_CHANGED_REQ","args","context_uri","item","uri","put","PLAY","PARTY_JOINED_REQ","socketId","users","map","display_name","join","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport io from 'socket.io-client'\nimport { SocketEvent, Party, PlaybackState } from '../common';\nimport axios, { AxiosResponse } from 'axios';\nimport Button from '../components/Button';\nimport { getHashParams } from '../helpers/helpers';\nimport { withRouter, match, useHistory } from 'react-router';\n\nimport { useUser } from '../contexts/UserContext';\nimport socket from '../socket';\nimport { User } from '../common';\nimport { SPOTIFY_API } from '../const';\n\ninterface Props {\n    match: any;\n}\n\nconst PartyPage: React.FC<Props> = ({ match }): React.ReactElement => {\n    const { user, isLoading } = useUser();\n    const [party, setParty] = useState<Party | undefined>(undefined);\n    const partyId = match.params.id;\n    const history = useHistory();\n\n    useEffect(() => {\n        console.log('loaded party first time')\n\n        socket.on(SocketEvent.USER_LEFT_PARTY_RES, (party: Party) => {\n            console.log('USER LEFT PARTY', party);\n            setParty(party);\n        });\n\n        socket.on(SocketEvent.PARTY_PLAYBACK_CHANGED_RES, (newPartyState: Party) => {\n            console.log('NEW PLAYBACK STATE', newPartyState.playbackState);\n            setParty(newPartyState);\n            if (newPartyState.playbackState && newPartyState.adminUser?.id !== user?.id) {\n                setCurrentlyPlaying(newPartyState.playbackState);\n            }\n        });\n\n        socket.on(SocketEvent.PARTY_NOT_FOUND_RES, (party: Party) => {\n            console.log('This party was not found... redirecting back');\n            setTimeout(() => {\n                history.push('/');\n            }, 2000);\n        });\n\n        socket.on(SocketEvent.PARTY_JOINED_RES, (party: Party) => {\n            console.log('USER JOINED PARTY', party);\n            setParty(party);\n\n            console.log('current party, ', party);\n\n            // start polling if admin\n            if (party.adminUser?.id === user?.id) {\n                getCurrentlyPlaying(party.id);\n            }\n        });\n\n\n        // NEED TO CHECK IF PARTY EXISTS HERE \n        return () => { socket.emit(SocketEvent.USER_LEFT_PARTY_REQ) };\n    }, [])\n\n    const getCurrentlyPlaying = (partyId: string) => {\n        axios.get(SPOTIFY_API.CURRENTLY_PLAYING).then((res: AxiosResponse<PlaybackState>) => {\n            console.log(res.data);\n            socket.emit(SocketEvent.PARTY_PLAYBACK_CHANGED_REQ, { playbackState: res.data, partyId: partyId })\n        })\n    }\n\n    const setCurrentlyPlaying = (playbackState: PlaybackState) => {\n        console.log('playing new state ', playbackState);\n        const args = {\n            context_uri: playbackState.item.uri\n        }\n        axios.put(SPOTIFY_API.PLAY, args)\n            .then(() => console.log('set new playbackState'))\n    }\n\n\n    useEffect(() => {\n        if (!user || isLoading) {\n            console.log('You are not authed');\n            return;\n        }\n\n        console.log('Logged in as ', user.id);\n\n        socket.emit(SocketEvent.PARTY_JOINED_REQ, { user: user, socketId: socket.id, partyId: partyId })\n    }, [user])\n\n    // const onPartyJoinedUnauthed = (numberOfUsers: number) => {\n    //     console.log('PARTY JOINED BACK')\n    //     setNumberOfUsers(numberOfUsers);\n    // }\n\n    return (\n        <div>\n            {user && user.id ?\n                <div>\n                    <h1>A duper dope party</h1>\n                    <div>Hi, {user.id}!</div>\n                    <div>The party admin is: ${party?.adminUser?.id}</div>\n                    <div>Users in here: {party?.users?.map(user => user.display_name).join(', ')}</div>\n                    {party?.playbackState ?\n                        <div>Currently playing: {party?.playbackState?.item.name}</div>\n                        :\n                        <div>No tracks playing</div>\n                    }\n                </div>\n                :\n                <div>This is a party, but you aint authed.</div>}\n        </div>);\n\n};\n\nexport default PartyPage;\n"]},"metadata":{},"sourceType":"module"}