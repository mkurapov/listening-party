{"ast":null,"code":"import React,{useEffect}from'react';import'./App.css';import io from'socket.io-client';import API_ENDPOINTS from'./endpoints';import axios from'axios';import{Switch,Route}from'react-router-dom';import Button from'./components/Button';import{getHashParams}from'./helpers/helpers';import{UserProvider,useUser}from'./contexts/UserContext';function App(){var APP_URL='http://localhost:8080';var LOGIN_URL=APP_URL+'/login';var data=useUser();console.log(data);var socket=io(APP_URL);socket.on('party-created',function(party){console.log(party);});var checkLogIn=function checkLogIn(){var savedUser=localStorage.getItem('user');if(savedUser){updateUser(JSON.parse(savedUser));return;}if(!window.location.hash)return;login();};useEffect(checkLogIn,[]);var logout=function logout(){setUser(undefined);localStorage.clear();};var login=function login(){var locationArgs=getHashParams(window.location.hash);axios.defaults.headers.common['Authorization']='Bearer '+locationArgs.access_token;axios.get(API_ENDPOINTS.ME).then(function(res){console.log(res.data);var user=res.data;setUser(user);localStorage.setItem('user',JSON.stringify(user));// socket.emit('newconnection', user);\n});};var createRoom=function createRoom(){socket.emit('party-create',socket.id);};return/*#__PURE__*/React.createElement(UserProvider,null,/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"header\",{className:\"App-header\"}),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\"},user&&user.id?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"Hi, \",user.id,\"!\"),/*#__PURE__*/React.createElement(Button,{name:\"Logout\",onClick:logout}),/*#__PURE__*/React.createElement(Button,{name:\"Create new Room\",onClick:createRoom})):/*#__PURE__*/React.createElement(\"a\",{href:LOGIN_URL},\"Login\")))));}export default App;","map":{"version":3,"sources":["/Users/max/dev/listening-party/client/src/App.tsx"],"names":["React","useEffect","io","API_ENDPOINTS","axios","Switch","Route","Button","getHashParams","UserProvider","useUser","App","APP_URL","LOGIN_URL","data","console","log","socket","on","party","checkLogIn","savedUser","localStorage","getItem","updateUser","JSON","parse","window","location","hash","login","logout","setUser","undefined","clear","locationArgs","defaults","headers","common","access_token","get","ME","then","res","user","setItem","stringify","createRoom","emit","id"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\nimport './App.css';\nimport io from 'socket.io-client'\nimport API_ENDPOINTS from './endpoints'\n\nimport axios, { AxiosResponse } from 'axios';\n\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport Home from './pages/authenticated/Party';\nimport { User, Party } from '../../models/User';\nimport Button from './components/Button';\nimport { getHashParams } from './helpers/helpers';\nimport { UserProvider, useUser } from './contexts/UserContext';\n\ninterface AuthHashParams {\n  access_token: string;\n  token_type: string;\n}\n\n\nfunction App() {\n  const APP_URL = 'http://localhost:8080'\n  const LOGIN_URL = APP_URL + '/login';\n\n  const data = useUser();\n  console.log(data);\n\n  const socket = io(APP_URL);\n  socket.on('party-created', (party: Party) => {\n    console.log(party);\n  });\n\n\n  const checkLogIn = (): void => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      updateUser(JSON.parse(savedUser));\n      return;\n    }\n\n    if (!window.location.hash) return;\n    login();\n  }\n\n  useEffect(checkLogIn, [])\n\n  const logout = (): void => {\n    setUser(undefined);\n    localStorage.clear();\n  }\n\n  const login = (): void => {\n    let locationArgs: AuthHashParams = getHashParams(window.location.hash);\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + locationArgs.access_token;\n    axios.get(API_ENDPOINTS.ME).then((res: AxiosResponse<SpotifyUser>) => {\n      console.log(res.data);\n      const user = res.data;\n      setUser(user)\n      localStorage.setItem('user', JSON.stringify(user));\n      // socket.emit('newconnection', user);\n    });\n  }\n\n  const createRoom = (): void => {\n    socket.emit('party-create', socket.id);\n  }\n\n\n\n  return (\n    <UserProvider>\n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header>\n        <Switch>\n          <Route exact path='/'>\n            {user && user.id ?\n              <div>\n                <div>Hi, {user.id}!</div>\n                <Button name=\"Logout\" onClick={logout}></Button>\n                <Button name=\"Create new Room\" onClick={createRoom}></Button>\n              </div>\n              :\n              <a href={LOGIN_URL}>Login</a>\n            }\n          </Route>\n        </Switch>\n\n      </div>\n    </UserProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}