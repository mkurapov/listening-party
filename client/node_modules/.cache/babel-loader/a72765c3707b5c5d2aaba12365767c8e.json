{"ast":null,"code":"import _slicedToArray from\"/Users/max/dev/listening-party/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{SocketEvent}from'../common';import axios from'axios';import{useHistory}from'react-router';import{useUser}from'../contexts/UserContext';import socket from'../socket';import{SPOTIFY_API}from'../const';var imageStyle={width:'100vw',height:'auto'};var PartyPage=function PartyPage(_ref){var _currentParty$adminUs,_currentParty$users,_currentParty$playbac,_currentParty$playbac2;var match=_ref.match;var _useUser=useUser(),user=_useUser.user,isLoading=_useUser.isLoading;var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),currentParty=_useState2[0],setCurrentParty=_useState2[1];var partyId=match.params.id;var history=useHistory();var pollCurrentlyPlaying;var currentPartyRef=React.useRef(currentParty);// this is so that the socket io handler methods get the latest version of currentParty\nuseEffect(function(){currentPartyRef.current=currentParty;},[currentParty]);useEffect(function(){// NEED TO CHECK IF PARTY EXISTS HERE \nreturn function(){return handleUserLeaving();};},[]);var registerListeners=function registerListeners(){socket.on(SocketEvent.USER_LEFT_PARTY_RES,onUserLeftParty);socket.on(SocketEvent.PARTY_PLAYBACK_CHANGED_RES,onPlaybackChanged);socket.on(SocketEvent.PARTY_NOT_FOUND_RES,onPartyNotFound);socket.on(SocketEvent.PARTY_NEW_USER_JOINED_RES,onNewUserJoined);socket.on(SocketEvent.PARTY_JOINED_RES,onPartyJoined);socket.on(SocketEvent.PARTY_CHANGED_ADMIN_RES,onAdminChanged);};useEffect(function(){console.log('user useEffect');if(!user||isLoading){if(!isLoading){console.log('You are not authed');}return;}console.log('Logged in as ',user.display_name);registerListeners();socket.emit(SocketEvent.PARTY_JOINED_REQ,{user:user,socketId:socket.id,partyId:partyId});},[user]);var onUserLeftParty=function onUserLeftParty(party){console.log('A user left party.');setCurrentParty(party);};var onPlaybackChanged=function onPlaybackChanged(party){var _party$adminUser;console.log('Playback state changed.');var isAdminUser=((_party$adminUser=party.adminUser)===null||_party$adminUser===void 0?void 0:_party$adminUser.id)===(user===null||user===void 0?void 0:user.id);if(!isAdminUser&&party.playbackState){var _currentPartyRef$curr,_currentPartyRef$curr2,_currentPartyRef$curr3,_currentPartyRef$curr4,_currentPartyRef$curr5,_currentPartyRef$curr6;var isNowPlaying=party.playbackState.is_playing&&!((_currentPartyRef$curr=currentPartyRef.current)===null||_currentPartyRef$curr===void 0?void 0:(_currentPartyRef$curr2=_currentPartyRef$curr.playbackState)===null||_currentPartyRef$curr2===void 0?void 0:_currentPartyRef$curr2.is_playing);//false\nvar isNowPaused=!party.playbackState.is_playing&&((_currentPartyRef$curr3=currentPartyRef.current)===null||_currentPartyRef$curr3===void 0?void 0:(_currentPartyRef$curr4=_currentPartyRef$curr3.playbackState)===null||_currentPartyRef$curr4===void 0?void 0:_currentPartyRef$curr4.is_playing);//undefined\nvar isNewSong=((_currentPartyRef$curr5=currentPartyRef.current)===null||_currentPartyRef$curr5===void 0?void 0:(_currentPartyRef$curr6=_currentPartyRef$curr5.playbackState)===null||_currentPartyRef$curr6===void 0?void 0:_currentPartyRef$curr6.item.id)!==party.playbackState.item.id;//false\nif(isNowPlaying||isNewSong){playSong(party.playbackState);}else if(isNowPaused){pauseSong();}}setCurrentParty(party);};var onNewUserJoined=function onNewUserJoined(party){var _party$users;console.log('New user joined,',party.users?party.users[((_party$users=party.users)===null||_party$users===void 0?void 0:_party$users.length)-1].display_name:'');setCurrentParty(party);};var onPartyNotFound=function onPartyNotFound(){console.log('This party was not found... redirecting back');setTimeout(function(){history.push('/');},2000);};var onPartyJoined=function onPartyJoined(party){setCurrentParty(party);if(party.playbackState&&party.playbackState.is_playing){playSong(party.playbackState,true);}};var onAdminChanged=function onAdminChanged(party){var _party$adminUser2;clearInterval(pollCurrentlyPlaying);if(((_party$adminUser2=party.adminUser)===null||_party$adminUser2===void 0?void 0:_party$adminUser2.id)===(user===null||user===void 0?void 0:user.id)){console.log('Youve been assigned admin.');pollCurrentlyPlaying=setInterval(function(){getCurrentlyPlaying(party.id);},5000);}setCurrentParty(party);};var handleUserLeaving=function handleUserLeaving(){socket.off(SocketEvent.USER_LEFT_PARTY_RES,onUserLeftParty);socket.off(SocketEvent.PARTY_PLAYBACK_CHANGED_RES,onPlaybackChanged);socket.off(SocketEvent.PARTY_NOT_FOUND_RES,onPartyNotFound);socket.off(SocketEvent.PARTY_NEW_USER_JOINED_RES,onNewUserJoined);socket.off(SocketEvent.PARTY_JOINED_RES,onPartyJoined);socket.off(SocketEvent.PARTY_CHANGED_ADMIN_RES,onAdminChanged);console.log('Leaving party.');clearInterval(pollCurrentlyPlaying);socket.emit(SocketEvent.USER_LEFT_PARTY_REQ);};var playSong=function playSong(playbackState){var isFirstTime=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;console.log('setting currently playing...',playbackState);var args={uris:[playbackState.item.uri],position_ms:isFirstTime?playbackState.progress_ms:0};console.log(args);axios.put(SPOTIFY_API.PLAY,args).then(function(){return console.log('Playing new song: ',playbackState.item.name);}).catch(function(err){var error=err.response.data.error;if(error.reason===\"NO_ACTIVE_DEVICE\"){console.log('Could not play song. No active device found.');}else if(error.reason===\"PREMIUM_REQUIRED\"){console.log('Could not play song. Premium required.');}else{console.log('Could not play song. Error: ',error);}});};var pauseSong=function pauseSong(){axios.put(SPOTIFY_API.PAUSE).then(function(){return console.log('Paused song.');}).catch(function(err){var error=err.response.data.error;console.log('Could not pause song: ',error);});};var getCurrentlyPlaying=function getCurrentlyPlaying(partyId){console.log('Getting currently playing...');axios.get(SPOTIFY_API.CURRENTLY_PLAYING).then(function(res){if(!res.data||!res.data.item){console.log('Nothing is playing, its an ad, or you are in private mode.');return;}socket.emit(SocketEvent.PARTY_PLAYBACK_REQ,{playbackState:res.data,partyId:partyId});}).catch(function(err){console.log('could not get currently playing');});};// const onPartyJoinedUnauthed = (numberOfUsers: number) => {\n//     console.log('PARTY JOINED BACK')\n//     setNumberOfUsers(numberOfUsers);\n// }\nreturn/*#__PURE__*/React.createElement(\"div\",null,user&&user.id?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"A duper dope party\"),/*#__PURE__*/React.createElement(\"h2\",null,\"Hi, \",user.display_name,\"!\"),/*#__PURE__*/React.createElement(\"div\",null,\"The DJ is \",currentParty===null||currentParty===void 0?void 0:(_currentParty$adminUs=currentParty.adminUser)===null||_currentParty$adminUs===void 0?void 0:_currentParty$adminUs.display_name),/*#__PURE__*/React.createElement(\"div\",null,\"Users in party: \",currentParty===null||currentParty===void 0?void 0:(_currentParty$users=currentParty.users)===null||_currentParty$users===void 0?void 0:_currentParty$users.map(function(user){return user.display_name;}).join(', ')),(currentParty===null||currentParty===void 0?void 0:currentParty.playbackState)?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"song\"},\"Currently playing\"),/*#__PURE__*/React.createElement(\"h3\",null,currentParty===null||currentParty===void 0?void 0:(_currentParty$playbac=currentParty.playbackState)===null||_currentParty$playbac===void 0?void 0:_currentParty$playbac.item.name),/*#__PURE__*/React.createElement(\"h3\",null,currentParty===null||currentParty===void 0?void 0:(_currentParty$playbac2=currentParty.playbackState)===null||_currentParty$playbac2===void 0?void 0:_currentParty$playbac2.item.album.artists[0].name),/*#__PURE__*/React.createElement(\"img\",{style:imageStyle,src:currentParty.playbackState.item.album.images[0].url}),/*#__PURE__*/React.createElement(\"div\",null,currentParty.playbackState.is_playing?'Playing':'Paused')):/*#__PURE__*/React.createElement(\"div\",null,\"No tracks playing\")):/*#__PURE__*/React.createElement(\"div\",null,\"This is a party, but you aint authed.\"));};export default PartyPage;","map":{"version":3,"sources":["/Users/max/dev/listening-party/client/src/pages/Party.tsx"],"names":["React","useEffect","useState","SocketEvent","axios","useHistory","useUser","socket","SPOTIFY_API","imageStyle","width","height","PartyPage","match","user","isLoading","undefined","currentParty","setCurrentParty","partyId","params","id","history","pollCurrentlyPlaying","currentPartyRef","useRef","current","handleUserLeaving","registerListeners","on","USER_LEFT_PARTY_RES","onUserLeftParty","PARTY_PLAYBACK_CHANGED_RES","onPlaybackChanged","PARTY_NOT_FOUND_RES","onPartyNotFound","PARTY_NEW_USER_JOINED_RES","onNewUserJoined","PARTY_JOINED_RES","onPartyJoined","PARTY_CHANGED_ADMIN_RES","onAdminChanged","console","log","display_name","emit","PARTY_JOINED_REQ","socketId","party","isAdminUser","adminUser","playbackState","isNowPlaying","is_playing","isNowPaused","isNewSong","item","playSong","pauseSong","users","length","setTimeout","push","clearInterval","setInterval","getCurrentlyPlaying","off","USER_LEFT_PARTY_REQ","isFirstTime","args","uris","uri","position_ms","progress_ms","put","PLAY","then","name","catch","err","error","response","data","reason","PAUSE","get","CURRENTLY_PLAYING","res","PARTY_PLAYBACK_REQ","map","join","album","artists","images","url"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport io from 'socket.io-client'\nimport { SocketEvent, Party, PlaybackState } from '../common';\nimport axios, { AxiosResponse } from 'axios';\nimport Button from '../components/Button';\nimport { getHashParams } from '../helpers/helpers';\nimport { withRouter, match, useHistory } from 'react-router';\n\nimport { useUser } from '../contexts/UserContext';\nimport socket from '../socket';\nimport { User } from '../common';\nimport { SPOTIFY_API } from '../const';\n\ninterface Props {\n    match: any;\n}\n\nconst imageStyle = {\n    width: '100vw',\n    height: 'auto'\n}\n\nconst PartyPage: React.FC<Props> = ({ match }): React.ReactElement => {\n    const { user, isLoading } = useUser();\n    const [currentParty, setCurrentParty] = useState<Party | undefined>(undefined);\n    const partyId = match.params.id;\n    const history = useHistory();\n    let pollCurrentlyPlaying: any;\n\n    const currentPartyRef = React.useRef(currentParty);\n\n    // this is so that the socket io handler methods get the latest version of currentParty\n    useEffect(() => {\n        currentPartyRef.current = currentParty;\n    }, [currentParty])\n\n    useEffect(() => {\n        // NEED TO CHECK IF PARTY EXISTS HERE \n        return () => handleUserLeaving();\n    }, [])\n\n    const registerListeners = () => {\n        socket.on(SocketEvent.USER_LEFT_PARTY_RES, onUserLeftParty);\n        socket.on(SocketEvent.PARTY_PLAYBACK_CHANGED_RES, onPlaybackChanged);\n        socket.on(SocketEvent.PARTY_NOT_FOUND_RES, onPartyNotFound);\n        socket.on(SocketEvent.PARTY_NEW_USER_JOINED_RES, onNewUserJoined);\n        socket.on(SocketEvent.PARTY_JOINED_RES, onPartyJoined);\n        socket.on(SocketEvent.PARTY_CHANGED_ADMIN_RES, onAdminChanged);\n    }\n\n    useEffect(() => {\n        console.log('user useEffect');\n        if (!user || isLoading) {\n            if (!isLoading) {\n                console.log('You are not authed');\n            }\n            return;\n        }\n\n        console.log('Logged in as ', user.display_name);\n\n        registerListeners();\n        socket.emit(SocketEvent.PARTY_JOINED_REQ, { user: user, socketId: socket.id, partyId: partyId })\n    }, [user])\n\n\n\n    const onUserLeftParty = (party: Party) => {\n        console.log('A user left party.');\n        setCurrentParty(party);\n    }\n\n    const onPlaybackChanged = (party: Party) => {\n        console.log('Playback state changed.');\n        const isAdminUser = party.adminUser?.id === user?.id;\n        if (!isAdminUser && party.playbackState) {\n\n            const isNowPlaying = party.playbackState.is_playing && !currentPartyRef.current?.playbackState?.is_playing; //false\n            const isNowPaused = !party.playbackState.is_playing && currentPartyRef.current?.playbackState?.is_playing;//undefined\n            const isNewSong = currentPartyRef.current?.playbackState?.item.id !== party.playbackState.item.id; //false\n\n            if (isNowPlaying || isNewSong) {\n                playSong(party.playbackState);\n            } else if (isNowPaused) {\n                pauseSong();\n            }\n        }\n\n        setCurrentParty(party);\n    }\n\n    const onNewUserJoined = (party: Party) => {\n        console.log('New user joined,', party.users ? party.users[party.users?.length - 1].display_name : '');\n        setCurrentParty(party);\n    }\n\n    const onPartyNotFound = () => {\n        console.log('This party was not found... redirecting back');\n        setTimeout(() => {\n            history.push('/');\n        }, 2000);\n    }\n\n    const onPartyJoined = (party: Party) => {\n        setCurrentParty(party);\n        if (party.playbackState && party.playbackState.is_playing) {\n            playSong(party.playbackState, true);\n        }\n    }\n\n    const onAdminChanged = (party: Party) => {\n        clearInterval(pollCurrentlyPlaying);\n        if (party.adminUser?.id === user?.id) {\n            console.log('Youve been assigned admin.')\n            pollCurrentlyPlaying = setInterval(() => {\n                getCurrentlyPlaying(party.id);\n            }, 5000);\n        }\n        setCurrentParty(party);\n    }\n\n    const handleUserLeaving = () => {\n        socket.off(SocketEvent.USER_LEFT_PARTY_RES, onUserLeftParty);\n        socket.off(SocketEvent.PARTY_PLAYBACK_CHANGED_RES, onPlaybackChanged);\n        socket.off(SocketEvent.PARTY_NOT_FOUND_RES, onPartyNotFound);\n        socket.off(SocketEvent.PARTY_NEW_USER_JOINED_RES, onNewUserJoined);\n        socket.off(SocketEvent.PARTY_JOINED_RES, onPartyJoined);\n        socket.off(SocketEvent.PARTY_CHANGED_ADMIN_RES, onAdminChanged);\n\n        console.log('Leaving party.')\n\n        clearInterval(pollCurrentlyPlaying);\n        socket.emit(SocketEvent.USER_LEFT_PARTY_REQ)\n    }\n\n    const playSong = (playbackState: PlaybackState, isFirstTime = false) => {\n        console.log('setting currently playing...', playbackState);\n\n        const args = {\n            uris: [playbackState.item.uri],\n            position_ms: isFirstTime ? playbackState.progress_ms : 0\n        }\n        console.log(args);\n        axios.put(SPOTIFY_API.PLAY, args)\n            .then(() => console.log('Playing new song: ', playbackState.item.name))\n            .catch(err => {\n                const error = err.response.data.error;\n                if (error.reason === \"NO_ACTIVE_DEVICE\") {\n                    console.log('Could not play song. No active device found.')\n                } else if (error.reason === \"PREMIUM_REQUIRED\") {\n                    console.log('Could not play song. Premium required.')\n                } else {\n                    console.log('Could not play song. Error: ', error);\n                }\n            });\n    }\n\n    const pauseSong = () => {\n        axios.put(SPOTIFY_API.PAUSE)\n            .then(() => console.log('Paused song.'))\n            .catch(err => {\n                const error = err.response.data.error;\n                console.log('Could not pause song: ', error)\n            });\n    }\n\n    const getCurrentlyPlaying = (partyId: string) => {\n        console.log('Getting currently playing...');\n        axios.get(SPOTIFY_API.CURRENTLY_PLAYING)\n            .then((res: AxiosResponse<PlaybackState>) => {\n                if (!res.data || !res.data.item) {\n                    console.log('Nothing is playing, its an ad, or you are in private mode.');\n                    return;\n                }\n                socket.emit(SocketEvent.PARTY_PLAYBACK_REQ, { playbackState: res.data, partyId: partyId })\n            })\n            .catch(err => { console.log('could not get currently playing') })\n    }\n\n\n\n\n    // const onPartyJoinedUnauthed = (numberOfUsers: number) => {\n    //     console.log('PARTY JOINED BACK')\n    //     setNumberOfUsers(numberOfUsers);\n    // }\n\n    return (\n        <div>\n            {user && user.id ?\n                <div>\n                    <h1>A duper dope party</h1>\n                    <h2>Hi, {user.display_name}!</h2>\n                    <div>The DJ is {currentParty?.adminUser?.display_name}</div>\n                    <div>Users in party: {currentParty?.users?.map(user => user.display_name).join(', ')}</div>\n                    {currentParty?.playbackState ?\n                        <div>\n                            <div className=\"song\">Currently playing</div>\n                            <h3>{currentParty?.playbackState?.item.name}</h3>\n                            <h3>{currentParty?.playbackState?.item.album.artists[0].name}</h3>\n                            <img style={imageStyle} src={currentParty.playbackState.item.album.images[0].url}></img>\n                            <div>{currentParty.playbackState.is_playing ? 'Playing' : 'Paused'}</div>\n                        </div>\n                        :\n                        <div>No tracks playing</div>\n                    }\n                </div>\n                :\n                <div>This is a party, but you aint authed.</div>}\n        </div>);\n\n};\n\nexport default PartyPage;\n"]},"metadata":{},"sourceType":"module"}