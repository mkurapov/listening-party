{"ast":null,"code":"import _regeneratorRuntime from\"/Users/max/dev/listening-party/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/max/dev/listening-party/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/max/dev/listening-party/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import axios from'axios';import Button from'../components/Button';import API_ENDPOINTS from'../endpoints';// import { getHashParams } from '../../../helpers/helpers';\nvar Home=function Home(){// const clientId = 'ac96599f92324f9ea5a9f0e80f48b9a4';\n// let location = useLocation();\n// const scopes = ['user-read-private', 'user-modify-playback-state', 'user-read-currently-playing', 'user-read-playback-state'];\n// // const state = '';\n// const redirectUri = 'http://localhost:3000/';\n// const authURL = `https://accounts.spotify.com/authorize?response_type=token&client_id=${encodeURIComponent(clientId)}&scope=${encodeURIComponent(scopes.join('%20'))}&redirect_uri=${encodeURIComponent(redirectUri)}`\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoggedIn=_useState2[0],setIsLoggedIn=_useState2[1];// useEffect(() => {\n//     if (!location.hash) return;\n//     setIsLoggedIn(true);\n//     let locationArgs: AuthHashParams = getHashParams(location.hash);\n//     axios.defaults.headers.common['Authorization'] = 'Bearer ' + locationArgs.access_token;\n// });\n// if (!isLoggedIn) {\n//     return (<div>\n//         <a href={authURL}> Login </a>\n//     </div>);\n// }\nvar getCurrentlyPlaying=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var userResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(API_ENDPOINTS.CURRENT_PLAYBACK);case 2:userResponse=_context.sent;console.log(userResponse.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getCurrentlyPlaying(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",null,\"YOU ARE LOGGED IN\",/*#__PURE__*/React.createElement(Button,{name:\"dogs\",onClick:getCurrentlyPlaying}));};export default Home;","map":{"version":3,"sources":["/Users/max/dev/listening-party/client/src/pages/Home.tsx"],"names":["React","useState","axios","Button","API_ENDPOINTS","Home","isLoggedIn","setIsLoggedIn","getCurrentlyPlaying","get","CURRENT_PLAYBACK","userResponse","console","log","data"],"mappings":"qWAAA,MAAOA,CAAAA,KAAP,EAA2BC,QAA3B,KAA2C,OAA3C,CAGA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,cAA1B,CACA;AAQA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAA0B,CACnC;AACA;AACA;AACA;AACA;AACA;AANmC,cAQCJ,QAAQ,CAAC,KAAD,CART,wCAQ5BK,UAR4B,eAQhBC,aARgB,eAUnC;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,mBAAmB,0FAAG,0KACGN,CAAAA,KAAK,CAACO,GAAN,CAAUL,aAAa,CAACM,gBAAxB,CADH,QAClBC,YADkB,eAExBC,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,IAAzB,EAFwB,sDAAH,kBAAnBN,CAAAA,mBAAmB,0CAAzB,CAKA,mBAAQ,gEAEJ,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,OAAO,CAAEA,mBAA7B,EAFI,CAAR,CAKH,CAnCD,CAqCA,cAAeH,CAAAA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport axios from 'axios';\nimport Button from '../components/Button';\nimport API_ENDPOINTS from '../endpoints';\n// import { getHashParams } from '../../../helpers/helpers';\n\ninterface AuthHashParams {\n    access_token: string;\n    token_type: string;\n    expires_in: string;\n}\n\nconst Home = (): React.ReactElement => {\n    // const clientId = 'ac96599f92324f9ea5a9f0e80f48b9a4';\n    // let location = useLocation();\n    // const scopes = ['user-read-private', 'user-modify-playback-state', 'user-read-currently-playing', 'user-read-playback-state'];\n    // // const state = '';\n    // const redirectUri = 'http://localhost:3000/';\n    // const authURL = `https://accounts.spotify.com/authorize?response_type=token&client_id=${encodeURIComponent(clientId)}&scope=${encodeURIComponent(scopes.join('%20'))}&redirect_uri=${encodeURIComponent(redirectUri)}`\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    // useEffect(() => {\n    //     if (!location.hash) return;\n\n    //     setIsLoggedIn(true);\n\n    //     let locationArgs: AuthHashParams = getHashParams(location.hash);\n    //     axios.defaults.headers.common['Authorization'] = 'Bearer ' + locationArgs.access_token;\n    // });\n\n    // if (!isLoggedIn) {\n    //     return (<div>\n    //         <a href={authURL}> Login </a>\n    //     </div>);\n    // }\n\n    const getCurrentlyPlaying = async () => {\n        const userResponse = await axios.get(API_ENDPOINTS.CURRENT_PLAYBACK);\n        console.log(userResponse.data);\n    }\n\n    return (<div>\n        YOU ARE LOGGED IN\n        <Button name=\"dogs\" onClick={getCurrentlyPlaying}></Button>\n    </div>)\n\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}