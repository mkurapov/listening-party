{"ast":null,"code":"import _slicedToArray from\"/Users/max/dev/listening-party/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{SocketEvent}from'../common';import axios from'axios';import{useHistory}from'react-router';import{useUser}from'../contexts/UserContext';import socket from'../socket';import{SPOTIFY_API}from'../const';var PartyPage=function PartyPage(_ref){var _currentParty$adminUs,_currentParty$users,_currentParty$playbac,_currentParty$playbac2;var match=_ref.match;var _useUser=useUser(),user=_useUser.user,isLoading=_useUser.isLoading;var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),currentParty=_useState2[0],setCurrentParty=_useState2[1];var partyId=match.params.id;var history=useHistory();var pollCurrentlyPlaying;useEffect(function(){// NEED TO CHECK IF PARTY EXISTS HERE \nreturn function(){return handleUserLeaving();};},[]);useEffect(function(){if(!user||isLoading){if(!isLoading){console.log('You are not authed');}return;}console.log('Logged in as ',user.display_name);socket.on(SocketEvent.USER_LEFT_PARTY_RES,onUserLeftParty);socket.on(SocketEvent.PARTY_PLAYBACK_CHANGED_RES,onPlaybackChanged);socket.on(SocketEvent.PARTY_NOT_FOUND_RES,onPartyNotFound);socket.on(SocketEvent.PARTY_NEW_USER_JOINED_RES,onNewUserJoined);socket.on(SocketEvent.PARTY_JOINED_RES,onPartyJoined);socket.on(SocketEvent.PARTY_CHANGED_ADMIN_RES,onAdminChanged);socket.emit(SocketEvent.PARTY_JOINED_REQ,{user:user,socketId:socket.id,partyId:partyId});},[user]);var onUserLeftParty=function onUserLeftParty(party){console.log('A user left party.');setCurrentParty(party);};var onPlaybackChanged=function onPlaybackChanged(party){var _party$adminUser;console.log('Playback state changed.');var isAdminUser=((_party$adminUser=party.adminUser)===null||_party$adminUser===void 0?void 0:_party$adminUser.id)===(user===null||user===void 0?void 0:user.id);if(!isAdminUser){if(party.playbackState){setCurrentlyPlaying(party.playbackState);}}setCurrentParty(party);};var onNewUserJoined=function onNewUserJoined(party){var _party$users;console.log('New user joined,',party.users?party.users[((_party$users=party.users)===null||_party$users===void 0?void 0:_party$users.length)-1].display_name:'');setCurrentParty(party);};var onPartyNotFound=function onPartyNotFound(){console.log('This party was not found... redirecting back');setTimeout(function(){history.push('/');},2000);};var onPartyJoined=function onPartyJoined(party){setCurrentParty(party);if(party.playbackState&&party.playbackState.is_playing){setCurrentlyPlaying(party.playbackState);}};var onAdminChanged=function onAdminChanged(party){var _party$adminUser2;clearInterval(pollCurrentlyPlaying);if(((_party$adminUser2=party.adminUser)===null||_party$adminUser2===void 0?void 0:_party$adminUser2.id)===(user===null||user===void 0?void 0:user.id)){console.log('Youve been assigned admin.');pollCurrentlyPlaying=setInterval(function(){getCurrentlyPlaying(party.id);},5000);}setCurrentParty(party);};var handleUserLeaving=function handleUserLeaving(){socket.off(SocketEvent.USER_LEFT_PARTY_RES,onUserLeftParty);socket.off(SocketEvent.PARTY_PLAYBACK_CHANGED_RES,onPlaybackChanged);socket.off(SocketEvent.PARTY_NOT_FOUND_RES,onPartyNotFound);socket.off(SocketEvent.PARTY_NEW_USER_JOINED_RES,onNewUserJoined);socket.off(SocketEvent.PARTY_JOINED_RES,onPartyJoined);socket.off(SocketEvent.PARTY_CHANGED_ADMIN_RES,onAdminChanged);console.log('Leaving party.');clearInterval(pollCurrentlyPlaying);socket.emit(SocketEvent.USER_LEFT_PARTY_REQ);};var setCurrentlyPlaying=function setCurrentlyPlaying(playbackState){console.log('setting currently playing...',playbackState);var args={uris:[playbackState.item.uri]};axios.put(SPOTIFY_API.PLAY,args).then(function(){return console.log('Playing new song: ',playbackState.item.name);}).catch(function(err){var error=err.response.data.error;if(error.reason===\"NO_ACTIVE_DEVICE\"){console.log('Could not play song. No active device found.');}else if(error.reason===\"PREMIUM_REQUIRED\"){console.log('Could not play song. Premium required.');}else{console.log('Could not play song. Error: ',error);}});};var getCurrentlyPlaying=function getCurrentlyPlaying(partyId){console.log('Getting currently playing...');axios.get(SPOTIFY_API.CURRENTLY_PLAYING).then(function(res){if(!res.data||!res.data.item){console.log('Nothing is playing, its an ad, or you are in private mode.');return;}socket.emit(SocketEvent.PARTY_PLAYBACK_REQ,{playbackState:res.data,partyId:partyId});}).catch(function(err){console.log('could not get currently playing');});};// const onPartyJoinedUnauthed = (numberOfUsers: number) => {\n//     console.log('PARTY JOINED BACK')\n//     setNumberOfUsers(numberOfUsers);\n// }\nreturn/*#__PURE__*/React.createElement(\"div\",null,user&&user.id?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"A duper dope party\"),/*#__PURE__*/React.createElement(\"h2\",null,\"Hi, \",user.display_name,\"!\"),/*#__PURE__*/React.createElement(\"div\",null,\"The DJ is \",currentParty===null||currentParty===void 0?void 0:(_currentParty$adminUs=currentParty.adminUser)===null||_currentParty$adminUs===void 0?void 0:_currentParty$adminUs.display_name),/*#__PURE__*/React.createElement(\"div\",null,\"Users in party: \",currentParty===null||currentParty===void 0?void 0:(_currentParty$users=currentParty.users)===null||_currentParty$users===void 0?void 0:_currentParty$users.map(function(user){return user.display_name;}).join(', ')),(currentParty===null||currentParty===void 0?void 0:currentParty.playbackState)?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"song\"},\"Currently playing\"),/*#__PURE__*/React.createElement(\"h3\",null,currentParty===null||currentParty===void 0?void 0:(_currentParty$playbac=currentParty.playbackState)===null||_currentParty$playbac===void 0?void 0:_currentParty$playbac.item.name),/*#__PURE__*/React.createElement(\"h3\",null,currentParty===null||currentParty===void 0?void 0:(_currentParty$playbac2=currentParty.playbackState)===null||_currentParty$playbac2===void 0?void 0:_currentParty$playbac2.item.album.artists[0].name),/*#__PURE__*/React.createElement(\"img\",{src:currentParty.playbackState.item.album.images[0].url})):/*#__PURE__*/React.createElement(\"div\",null,\"No tracks playing\")):/*#__PURE__*/React.createElement(\"div\",null,\"This is a party, but you aint authed.\"));};export default PartyPage;","map":{"version":3,"sources":["/Users/max/dev/listening-party/client/src/pages/Party.tsx"],"names":["React","useEffect","useState","SocketEvent","axios","useHistory","useUser","socket","SPOTIFY_API","PartyPage","match","user","isLoading","undefined","currentParty","setCurrentParty","partyId","params","id","history","pollCurrentlyPlaying","handleUserLeaving","console","log","display_name","on","USER_LEFT_PARTY_RES","onUserLeftParty","PARTY_PLAYBACK_CHANGED_RES","onPlaybackChanged","PARTY_NOT_FOUND_RES","onPartyNotFound","PARTY_NEW_USER_JOINED_RES","onNewUserJoined","PARTY_JOINED_RES","onPartyJoined","PARTY_CHANGED_ADMIN_RES","onAdminChanged","emit","PARTY_JOINED_REQ","socketId","party","isAdminUser","adminUser","playbackState","setCurrentlyPlaying","users","length","setTimeout","push","is_playing","clearInterval","setInterval","getCurrentlyPlaying","off","USER_LEFT_PARTY_REQ","args","uris","item","uri","put","PLAY","then","name","catch","err","error","response","data","reason","get","CURRENTLY_PLAYING","res","PARTY_PLAYBACK_REQ","map","join","album","artists","images","url"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport io from 'socket.io-client'\nimport { SocketEvent, Party, PlaybackState } from '../common';\nimport axios, { AxiosResponse } from 'axios';\nimport Button from '../components/Button';\nimport { getHashParams } from '../helpers/helpers';\nimport { withRouter, match, useHistory } from 'react-router';\n\nimport { useUser } from '../contexts/UserContext';\nimport socket from '../socket';\nimport { User } from '../common';\nimport { SPOTIFY_API } from '../const';\n\ninterface Props {\n    match: any;\n}\n\nconst PartyPage: React.FC<Props> = ({ match }): React.ReactElement => {\n    const { user, isLoading } = useUser();\n    const [currentParty, setCurrentParty] = useState<Party | undefined>(undefined);\n    const partyId = match.params.id;\n    const history = useHistory();\n    let pollCurrentlyPlaying: any;\n\n    useEffect(() => {\n        // NEED TO CHECK IF PARTY EXISTS HERE \n        return () => handleUserLeaving();\n    }, [])\n\n    useEffect(() => {\n        if (!user || isLoading) {\n            if (!isLoading) {\n                console.log('You are not authed');\n            }\n            return;\n        }\n\n        console.log('Logged in as ', user.display_name);\n        socket.on(SocketEvent.USER_LEFT_PARTY_RES, onUserLeftParty);\n        socket.on(SocketEvent.PARTY_PLAYBACK_CHANGED_RES, onPlaybackChanged);\n        socket.on(SocketEvent.PARTY_NOT_FOUND_RES, onPartyNotFound);\n        socket.on(SocketEvent.PARTY_NEW_USER_JOINED_RES, onNewUserJoined);\n        socket.on(SocketEvent.PARTY_JOINED_RES, onPartyJoined);\n        socket.on(SocketEvent.PARTY_CHANGED_ADMIN_RES, onAdminChanged);\n\n        socket.emit(SocketEvent.PARTY_JOINED_REQ, { user: user, socketId: socket.id, partyId: partyId })\n    }, [user])\n\n    const onUserLeftParty = (party: Party) => {\n        console.log('A user left party.');\n        setCurrentParty(party);\n    }\n\n    const onPlaybackChanged = (party: Party) => {\n        console.log('Playback state changed.');\n        const isAdminUser = party.adminUser?.id === user?.id;\n        if (!isAdminUser) {\n            if (party.playbackState) {\n                setCurrentlyPlaying(party.playbackState);\n            }\n        }\n\n        setCurrentParty(party);\n    }\n\n    const onNewUserJoined = (party: Party) => {\n        console.log('New user joined,', party.users ? party.users[party.users?.length - 1].display_name : '');\n        setCurrentParty(party);\n    }\n\n    const onPartyNotFound = () => {\n        console.log('This party was not found... redirecting back');\n        setTimeout(() => {\n            history.push('/');\n        }, 2000);\n    }\n\n    const onPartyJoined = (party: Party) => {\n        setCurrentParty(party);\n        if (party.playbackState && party.playbackState.is_playing) {\n            setCurrentlyPlaying(party.playbackState);\n        }\n    }\n\n    const onAdminChanged = (party: Party) => {\n        clearInterval(pollCurrentlyPlaying);\n        if (party.adminUser?.id === user?.id) {\n            console.log('Youve been assigned admin.')\n            pollCurrentlyPlaying = setInterval(() => {\n                getCurrentlyPlaying(party.id);\n            }, 5000);\n        }\n        setCurrentParty(party);\n    }\n\n    const handleUserLeaving = () => {\n        socket.off(SocketEvent.USER_LEFT_PARTY_RES, onUserLeftParty);\n        socket.off(SocketEvent.PARTY_PLAYBACK_CHANGED_RES, onPlaybackChanged);\n        socket.off(SocketEvent.PARTY_NOT_FOUND_RES, onPartyNotFound);\n        socket.off(SocketEvent.PARTY_NEW_USER_JOINED_RES, onNewUserJoined);\n        socket.off(SocketEvent.PARTY_JOINED_RES, onPartyJoined);\n        socket.off(SocketEvent.PARTY_CHANGED_ADMIN_RES, onAdminChanged);\n\n        console.log('Leaving party.')\n\n        clearInterval(pollCurrentlyPlaying);\n        socket.emit(SocketEvent.USER_LEFT_PARTY_REQ)\n    }\n\n    const setCurrentlyPlaying = (playbackState: PlaybackState) => {\n        console.log('setting currently playing...', playbackState);\n        const args = {\n            uris: [playbackState.item.uri]\n        }\n        axios.put(SPOTIFY_API.PLAY, args)\n            .then(() => console.log('Playing new song: ', playbackState.item.name))\n            .catch(err => {\n                const error = err.response.data.error;\n                if (error.reason === \"NO_ACTIVE_DEVICE\") {\n                    console.log('Could not play song. No active device found.')\n                } else if (error.reason === \"PREMIUM_REQUIRED\") {\n                    console.log('Could not play song. Premium required.')\n                } else {\n                    console.log('Could not play song. Error: ', error);\n                }\n            });\n    }\n\n    const getCurrentlyPlaying = (partyId: string) => {\n        console.log('Getting currently playing...');\n        axios.get(SPOTIFY_API.CURRENTLY_PLAYING)\n            .then((res: AxiosResponse<PlaybackState>) => {\n                if (!res.data || !res.data.item) {\n                    console.log('Nothing is playing, its an ad, or you are in private mode.');\n                    return;\n                }\n                socket.emit(SocketEvent.PARTY_PLAYBACK_REQ, { playbackState: res.data, partyId: partyId })\n            })\n            .catch(err => { console.log('could not get currently playing') })\n    }\n\n\n\n\n    // const onPartyJoinedUnauthed = (numberOfUsers: number) => {\n    //     console.log('PARTY JOINED BACK')\n    //     setNumberOfUsers(numberOfUsers);\n    // }\n\n    return (\n        <div>\n            {user && user.id ?\n                <div>\n                    <h1>A duper dope party</h1>\n                    <h2>Hi, {user.display_name}!</h2>\n                    <div>The DJ is {currentParty?.adminUser?.display_name}</div>\n                    <div>Users in party: {currentParty?.users?.map(user => user.display_name).join(', ')}</div>\n                    {currentParty?.playbackState ?\n                        <div>\n                            <div className=\"song\">Currently playing</div>\n                            <h3>{currentParty?.playbackState?.item.name}</h3>\n                            <h3>{currentParty?.playbackState?.item.album.artists[0].name}</h3>\n                            <img src={currentParty.playbackState.item.album.images[0].url}></img>\n                        </div>\n                        :\n                        <div>No tracks playing</div>\n                    }\n                </div>\n                :\n                <div>This is a party, but you aint authed.</div>}\n        </div>);\n\n};\n\nexport default PartyPage;\n"]},"metadata":{},"sourceType":"module"}