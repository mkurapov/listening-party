{"ast":null,"code":"import _slicedToArray from\"/Users/max/dev/listening-party/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useMemo,createContext,useContext}from\"react\";import axios from'axios';import{SocketEvent}from'../common';import{getHashParams,getTimeWithMinutesOffset}from'../helpers/helpers';import{SPOTIFY_API,APP_API}from\"../const\";import socket from\"../socket\";var UserContext=createContext({user:undefined,isLoading:false,logout:function logout(){}});var UserProvider=function UserProvider(_ref){var children=_ref.children;var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var storedUser;var storedAccessToken;var storedRefreshToken;useEffect(function(){storedUser=localStorage.getItem('user');storedAccessToken=localStorage.getItem('access_token');storedRefreshToken=localStorage.getItem('refresh_token');if(!storedUser||!storedAccessToken||!storedRefreshToken){if(!window.location.hash)return;login();return;}var expiryDate=localStorage.getItem('expiry_time');if(expiryDate&&new Date().getTime()>parseInt(expiryDate)){console.log('expired');getNewAccessToken(storedRefreshToken).then(function(res){updateUser(storedUser);setAuthheader(res.data.access_token);localStorage.setItem('access_token',res.data.access_token);localStorage.setItem('expiry_time',getTimeWithMinutesOffset(1).getTime().toString());});}else{console.log('not expired');if(storedUser){updateUser(storedUser);}}},[]);var login=function login(){var locationArgs=getHashParams(window.location.hash);setAuthheader(locationArgs.access_token);axios.get(SPOTIFY_API.ME).then(function(res){var user=res.data;updateUser(user);localStorage.setItem('user',JSON.stringify(user));localStorage.setItem('access_token',locationArgs.access_token);localStorage.setItem('refresh_token',locationArgs.refresh_token);localStorage.setItem('expiry_time',getTimeWithMinutesOffset(1).getTime().toString());});};var updateUser=function updateUser(user){setUser(user);setIsLoading(false);socket.emit(SocketEvent.USER_CONNECTED_REQ,user.id);};var logout=function logout(){// socket.emit(SocketEvent.USER_DISCONNECTED_REQ, user);\nsetUser(undefined);localStorage.clear();};var getNewAccessToken=function getNewAccessToken(refreshToken){return axios.get(APP_API.REFRESH_TOKEN,{params:{refresh_token:refreshToken}});};var setAuthheader=function setAuthheader(accessToken){axios.defaults.headers.common['Authorization']='Bearer '+accessToken;};var SettingsContext=useMemo(function(){return{user:user,isLoading:isLoading,logout:logout};},[user,logout]);return/*#__PURE__*/React.createElement(UserContext.Provider,{value:SettingsContext},children);};var useUser=function useUser(){return useContext(UserContext);};export{UserProvider,useUser};","map":{"version":3,"sources":["/Users/max/dev/listening-party/client/src/contexts/UserContext.tsx"],"names":["React","useState","useEffect","useMemo","createContext","useContext","axios","SocketEvent","getHashParams","getTimeWithMinutesOffset","SPOTIFY_API","APP_API","socket","UserContext","user","undefined","isLoading","logout","UserProvider","children","setUser","setIsLoading","storedUser","storedAccessToken","storedRefreshToken","localStorage","getItem","window","location","hash","login","expiryDate","Date","getTime","parseInt","console","log","getNewAccessToken","then","res","updateUser","setAuthheader","data","access_token","setItem","toString","locationArgs","get","ME","JSON","stringify","refresh_token","emit","USER_CONNECTED_REQ","id","clear","refreshToken","REFRESH_TOKEN","params","accessToken","defaults","headers","common","SettingsContext","useUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, createContext, useContext } from \"react\";\n\nimport axios, { AxiosResponse } from 'axios';\nimport { User, SocketEvent } from '../common';\n\nimport { getHashParams, getTimeWithMinutesOffset } from '../helpers/helpers';\nimport { SPOTIFY_API, APP_API } from \"../const\";\nimport socket from \"../socket\";\n\ninterface AuthHashParams {\n    access_token: string;\n    refresh_token: string;\n    token_type: string;\n}\n\ninterface RefreshAccessTokenResponse {\n    access_token: string;\n}\n\n\nexport interface UserContext {\n    user: User | undefined;\n    isLoading: boolean;\n    logout: () => void;\n}\n\nconst UserContext = createContext<UserContext>({\n    user: undefined,\n    isLoading: false,\n    logout: () => { },\n});\n\nconst UserProvider: React.FC = ({ children }): React.ReactElement => {\n    const [user, setUser] = useState<User>();\n    const [isLoading, setIsLoading] = useState(true);\n    let storedUser: string | null;\n    let storedAccessToken: string | null;\n    let storedRefreshToken: string | null;\n\n    useEffect(() => {\n        storedUser = localStorage.getItem('user');\n        storedAccessToken = localStorage.getItem('access_token');\n        storedRefreshToken = localStorage.getItem('refresh_token');\n\n        if (!storedUser || !storedAccessToken || !storedRefreshToken) {\n            if (!window.location.hash) return;\n            login();\n            return;\n        }\n\n        const expiryDate = localStorage.getItem('expiry_time');\n        if (expiryDate && new Date().getTime() > parseInt(expiryDate)) {\n            console.log('expired');\n            getNewAccessToken(storedRefreshToken).then(res => {\n                updateUser(storedUser as unknown as User);\n                setAuthheader(res.data.access_token);\n                localStorage.setItem('access_token', res.data.access_token);\n                localStorage.setItem('expiry_time', getTimeWithMinutesOffset(1).getTime().toString())\n            });\n        } else {\n            console.log('not expired')\n            if (storedUser) {\n                updateUser(storedUser as unknown as User);\n            }\n        }\n    }, [])\n\n    const login = (): void => {\n        let locationArgs: AuthHashParams = getHashParams(window.location.hash);\n        setAuthheader(locationArgs.access_token);\n        axios.get(SPOTIFY_API.ME).then((res: AxiosResponse<User>) => {\n            const user = res.data;\n            updateUser(user);\n            localStorage.setItem('user', JSON.stringify(user));\n            localStorage.setItem('access_token', locationArgs.access_token);\n            localStorage.setItem('refresh_token', locationArgs.refresh_token);\n            localStorage.setItem('expiry_time', getTimeWithMinutesOffset(1).getTime().toString())\n        });\n    }\n\n    const updateUser = (user: User): void => {\n        setUser(user);\n        setIsLoading(false);\n        socket.emit(SocketEvent.USER_CONNECTED_REQ, user.id);\n    }\n\n    const logout = (): void => {\n        // socket.emit(SocketEvent.USER_DISCONNECTED_REQ, user);\n        setUser(undefined);\n        localStorage.clear();\n    }\n\n    const getNewAccessToken = (refreshToken: string): Promise<AxiosResponse<RefreshAccessTokenResponse>> => {\n        return axios.get(APP_API.REFRESH_TOKEN, {\n            params: {\n                refresh_token: refreshToken\n            }\n        });\n    }\n\n    const setAuthheader = (accessToken: string) => {\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + accessToken;\n    }\n\n\n    const SettingsContext = useMemo(() => ({\n        user,\n        isLoading,\n        logout\n    }), [user, logout]);\n\n    return (\n        <UserContext.Provider value={SettingsContext}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nconst useUser = () => useContext(UserContext);\nexport { UserProvider, useUser };\n\n"]},"metadata":{},"sourceType":"module"}