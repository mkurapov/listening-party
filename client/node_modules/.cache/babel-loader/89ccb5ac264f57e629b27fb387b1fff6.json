{"ast":null,"code":"var _jsxFileName = \"/Users/max/dev/listening-party/client/src/contexts/UserContext.tsx\";\nimport React, { useState, useEffect, useMemo, createContext, useContext } from \"react\";\nimport axios from 'axios';\nimport { getHashParams } from '../helpers/helpers';\nimport { SPOTIFY_API } from \"../const\";\nconst UserContext = createContext({\n  user: undefined,\n  logout: () => {}\n});\n\nconst UserProvider = ({\n  children\n}) => {\n  const [user, setUser] = useState();\n  useEffect(() => {\n    console.log('checklogin');\n    const savedUser = localStorage.getItem('user');\n\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n      return;\n    }\n\n    if (!window.location.hash) return;\n    login();\n  }, []);\n\n  const login = () => {\n    let locationArgs = getHashParams(window.location.hash);\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + locationArgs.access_token;\n    axios.get(SPOTIFY_API.ME).then(res => {\n      const user = res.data;\n      setUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n    });\n  };\n\n  const logout = () => {\n    setUser(undefined);\n    localStorage.clear();\n  };\n\n  const SettingsContext = useMemo(() => ({\n    user,\n    logout\n  }), [user, logout]);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: SettingsContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nconst useUser = () => useContext(UserContext);\n\nexport { UserProvider, useUser };","map":{"version":3,"sources":["/Users/max/dev/listening-party/client/src/contexts/UserContext.tsx"],"names":["React","useState","useEffect","useMemo","createContext","useContext","axios","getHashParams","SPOTIFY_API","UserContext","user","undefined","logout","UserProvider","children","setUser","console","log","savedUser","localStorage","getItem","JSON","parse","window","location","hash","login","locationArgs","defaults","headers","common","access_token","get","ME","then","res","data","setItem","stringify","clear","SettingsContext","useUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAkDC,OAAlD,EAA2DC,aAA3D,EAA0EC,UAA1E,QAA4F,OAA5F;AAEA,OAAOC,KAAP,MAAqC,OAArC;AAGA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,UAA5B;AAaA,MAAMC,WAAW,GAAGL,aAAa,CAAc;AAC3CM,EAAAA,IAAI,EAAEC,SADqC;AAE3CC,EAAAA,MAAM,EAAE,MAAM,CAAG;AAF0B,CAAd,CAAjC;;AAKA,MAAMC,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsC;AACjE,QAAM,CAACJ,IAAD,EAAOK,OAAP,IAAkBd,QAAQ,EAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACXH,MAAAA,OAAO,CAACM,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAD,CAAP;AACA;AACH;;AAED,QAAI,CAACK,MAAM,CAACC,QAAP,CAAgBC,IAArB,EAA2B;AAC3BC,IAAAA,KAAK;AACR,GAVQ,EAUN,EAVM,CAAT;;AAaA,QAAMA,KAAK,GAAG,MAAY;AACtB,QAAIC,YAA4B,GAAGpB,aAAa,CAACgB,MAAM,CAACC,QAAP,CAAgBC,IAAjB,CAAhD;AACAnB,IAAAA,KAAK,CAACsB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,YAAYH,YAAY,CAACI,YAA1E;AACAzB,IAAAA,KAAK,CAAC0B,GAAN,CAAUxB,WAAW,CAACyB,EAAtB,EAA0BC,IAA1B,CAAgCC,GAAD,IAA8B;AACzD,YAAMzB,IAAI,GAAGyB,GAAG,CAACC,IAAjB;AACArB,MAAAA,OAAO,CAACL,IAAD,CAAP;AACAS,MAAAA,YAAY,CAACkB,OAAb,CAAqB,MAArB,EAA6BhB,IAAI,CAACiB,SAAL,CAAe5B,IAAf,CAA7B;AACH,KAJD;AAKH,GARD;;AAUA,QAAME,MAAM,GAAG,MAAY;AACvBG,IAAAA,OAAO,CAACJ,SAAD,CAAP;AACAQ,IAAAA,YAAY,CAACoB,KAAb;AACH,GAHD;;AAKA,QAAMC,eAAe,GAAGrC,OAAO,CAAC,OAAO;AACnCO,IAAAA,IADmC;AAEnCE,IAAAA;AAFmC,GAAP,CAAD,EAG3B,CAACF,IAAD,EAAOE,MAAP,CAH2B,CAA/B;AAKA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE4B,eAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1B,QADL,CADJ;AAKH,CAzCD;;AA2CA,MAAM2B,OAAO,GAAG,MAAMpC,UAAU,CAACI,WAAD,CAAhC;;AACA,SAASI,YAAT,EAAuB4B,OAAvB","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, createContext, useContext } from \"react\";\n\nimport axios, { AxiosResponse } from 'axios';\nimport { User } from '../common';\n\nimport { getHashParams } from '../helpers/helpers';\nimport { SPOTIFY_API } from \"../const\";\n\ninterface AuthHashParams {\n    access_token: string;\n    token_type: string;\n}\n\n\nexport interface UserContext {\n    user: User | undefined;\n    logout: () => void;\n}\n\nconst UserContext = createContext<UserContext>({\n    user: undefined,\n    logout: () => { },\n});\n\nconst UserProvider: React.FC = ({ children }): React.ReactElement => {\n    const [user, setUser] = useState<User>();\n\n    useEffect(() => {\n        console.log('checklogin')\n        const savedUser = localStorage.getItem('user');\n        if (savedUser) {\n            setUser(JSON.parse(savedUser));\n            return;\n        }\n\n        if (!window.location.hash) return;\n        login();\n    }, [])\n\n\n    const login = (): void => {\n        let locationArgs: AuthHashParams = getHashParams(window.location.hash);\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + locationArgs.access_token;\n        axios.get(SPOTIFY_API.ME).then((res: AxiosResponse<User>) => {\n            const user = res.data;\n            setUser(user)\n            localStorage.setItem('user', JSON.stringify(user));\n        });\n    }\n\n    const logout = (): void => {\n        setUser(undefined);\n        localStorage.clear();\n    }\n\n    const SettingsContext = useMemo(() => ({\n        user,\n        logout\n    }), [user, logout]);\n\n    return (\n        <UserContext.Provider value={SettingsContext}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nconst useUser = () => useContext(UserContext);\nexport { UserProvider, useUser };\n\n"]},"metadata":{},"sourceType":"module"}