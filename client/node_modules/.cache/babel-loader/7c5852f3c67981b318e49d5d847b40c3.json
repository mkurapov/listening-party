{"ast":null,"code":"var _jsxFileName = \"/Users/max/dev/listening-party/client/src/pages/Party.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport Events from '../../../events';\nimport { useUser } from '../contexts/UserContext';\nimport socket from '../socket';\n\nconst Party = () => {\n  const {\n    user\n  } = useUser();\n  const [usersInParty, setUsersInParty] = useState([]);\n  useEffect(() => {\n    if (user) {\n      socket.emit(Events.USER_JOINED_REQ, user);\n    }\n\n    socket.on(Events.USER_JOINED_RES, newUser => {\n      setUsersInParty([...usersInParty, newUser]);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, user && user.id ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Hi, \", user.id, \"!\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"This is a party, but you aint authed.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, usersInParty.map(user => user.display_name)));\n};\n\nexport default Party;","map":{"version":3,"sources":["/Users/max/dev/listening-party/client/src/pages/Party.tsx"],"names":["React","useEffect","useState","Events","useUser","socket","Party","user","usersInParty","setUsersInParty","emit","USER_JOINED_REQ","on","USER_JOINED_RES","newUser","id","map","display_name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAOC,MAAP,MAAmB,iBAAnB;AAIA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAIA,MAAMC,KAAK,GAAG,MAA0B;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAWH,OAAO,EAAxB;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAS,EAAT,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,IAAJ,EAAU;AACNF,MAAAA,MAAM,CAACK,IAAP,CAAYP,MAAM,CAACQ,eAAnB,EAAoCJ,IAApC;AACH;;AAEDF,IAAAA,MAAM,CAACO,EAAP,CAAUT,MAAM,CAACU,eAAjB,EAAmCC,OAAD,IAAmB;AACjDL,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBM,OAAlB,CAAD,CAAf;AACH,KAFD;AAGH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,IAAI,IAAIA,IAAI,CAACQ,EAAb,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAUR,IAAI,CAACQ,EAAf,MADJ,CADH,gBAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CANR,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,YAAY,CAACQ,GAAb,CAAiBT,IAAI,IAAIA,IAAI,CAACU,YAA9B,CAAN,CAPJ,CADJ;AAWH,CAzBD;;AA2BA,eAAeX,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport io from 'socket.io-client'\nimport Events from '../../../events';\nimport axios from 'axios';\nimport Button from '../components/Button';\nimport { getHashParams } from '../helpers/helpers';\nimport { useUser } from '../contexts/UserContext';\nimport socket from '../socket';\nimport { User } from '../../../common/User';\n\n\nconst Party = (): React.ReactElement => {\n    const { user } = useUser();\n    const [usersInParty, setUsersInParty] = useState<User[]>([]);\n\n    useEffect(() => {\n        if (user) {\n            socket.emit(Events.USER_JOINED_REQ, user)\n        }\n\n        socket.on(Events.USER_JOINED_RES, (newUser: User) => {\n            setUsersInParty([...usersInParty, newUser]);\n        })\n    }, [])\n\n    return (\n        <div>\n            {user && user.id ?\n                <div>\n                    <div>Hi, {user.id}!</div>\n                </div>\n                :\n                <div>This is a party, but you aint authed.</div>}\n            <div>{usersInParty.map(user => user.display_name)}</div>\n        </div>);\n\n};\n\nexport default Party;\n"]},"metadata":{},"sourceType":"module"}